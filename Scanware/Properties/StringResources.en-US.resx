<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="button_confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="button_print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="button_reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="button_search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="header_coil_location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="header_coil_verification_status" xml:space="preserve">
    <value>Verification Status</value>
  </data>
  <data name="header_coil_weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="header_production_coil_no" xml:space="preserve">
    <value>Coil Number</value>
  </data>
  <data name="header_product_type" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="input_customer_pickup_description" xml:space="preserve">
    <value>Customer Pick Up Description</value>
  </data>
  <data name="label_carrier" xml:space="preserve">
    <value>Carrier</value>
  </data>
  <data name="label_city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="label_coil_unverified" xml:space="preserve">
    <value>Unverified</value>
  </data>
  <data name="label_coil_verified" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="label_destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="label_driver_name" xml:space="preserve">
    <value>Driver Name</value>
  </data>
  <data name="label_driver_signature" xml:space="preserve">
    <value>Signature</value>
  </data>
  <data name="label_load_card_number" xml:space="preserve">
    <value>Load Card Number</value>
  </data>
  <data name="label_precheck_prompt" xml:space="preserve">
    <value>Pre-Check Number</value>
  </data>
  <data name="label_processed_time" xml:space="preserve">
    <value>Process Time</value>
  </data>
  <data name="label_state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="label_vehicle_number" xml:space="preserve">
    <value>Vehicle Number</value>
  </data>
  <data name="progress_stage_0" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="progress_stage_1" xml:space="preserve">
    <value>Carrier Info</value>
  </data>
  <data name="progress_stage_2" xml:space="preserve">
    <value>Signature</value>
  </data>
  <data name="progress_stage_3" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="prompt_select_carrier" xml:space="preserve">
    <value>Select Carrier</value>
  </data>
  <data name="prompt_select_city" xml:space="preserve">
    <value>Select City</value>
  </data>
  <data name="prompt_select_state" xml:space="preserve">
    <value>Select State</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Kiosk</value>
  </data>
  <data name="toggle_prechecked" xml:space="preserve">
    <value>Prechecked</value>
  </data>
  <data name="error_check_in_failed" xml:space="preserve">
    <value>There was an error while checking in</value>
  </data>
  <data name="error_invalid_load_card_number" xml:space="preserve">
    <value>Invalid Load Card Number</value>
  </data>
  <data name="error_invalid_precheck_number" xml:space="preserve">
    <value>Invalid Pre-Check Number</value>
  </data>
  <data name="error_local_destination" xml:space="preserve">
    <value>This terminal can not be used for MSP or NEW PROCESS-COLUMBUS Shipments</value>
  </data>
  <data name="error_local_destination_supplement" xml:space="preserve">
    <value>is destined for</value>
  </data>
  <data name="error_precheck_id_not_found" xml:space="preserve">
    <value>Unable to find Pre-Check ID</value>
  </data>
  <data name="error_print_failed" xml:space="preserve">
    <value>There was an error while printing ship tag / load cards. Please contact IT support.</value>
  </data>
  <data name="error_signature_failed" xml:space="preserve">
    <value>An error occurred while attempting to save the signature. Please contact IT support.</value>
  </data>
  <data name="error_signature_required" xml:space="preserve">
    <value>No signature was captured. Signature is required.</value>
  </data>
  <data name="error_validation_failed" xml:space="preserve">
    <value>Destination does not match customer order</value>
  </data>
  <data name="label_load_details" xml:space="preserve">
    <value>Load Details</value>
  </data>
  <data name="success_message" xml:space="preserve">
    <value>Check-In Complete. Printing Load Card &amp; Bill of Lading. Retrieve paperwork and proceed in your truck down the shipping bay.</value>
  </data>
  <data name="error_previous_shipment" xml:space="preserve">
    <value>This load has already been shipped</value>
  </data>
  <data name="label_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="label_message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="label_previous_shipment" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="instructions_step1" xml:space="preserve">
    <value>Select destination State and City and click Confirm</value>
  </data>
  <data name="instructions_step2" xml:space="preserve">
    <value>Enter your vehicle number, verify carrier, and click Confirm.</value>
  </data>
  <data name="instructions_step3" xml:space="preserve">
    <value>Enter your name, use the touch screen to sign in the blue box, and click Confirm.</value>
  </data>
  <data name="instructions_step4" xml:space="preserve">
    <value>Verify the details below and click Confirm to print your shipping paperwork.</value>
  </data>
  <data name="error_future_shipment" xml:space="preserve">
    <value>Shipment is scheduled for </value>
  </data>
  <data name="label_future_shipment" xml:space="preserve">
    <value>Future Shipment</value>
  </data>
</root>